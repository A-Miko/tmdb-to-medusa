version: '3.8'

services:
  tmdb-to-medusa:
    build: .
    image: tmdb-to-medusa:latest
    container_name: tmdb-to-medusa
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - tmdb_cache:/app/.cache
    healthcheck:
      test: ["CMD", "python", "-c", "import os, requests; requests.get(f'https://api.themoviedb.org/3/configuration?api_key={os.environ.get(\"TMDB_API_KEY\")}').raise_for_status(); requests.get(f'{os.environ.get(\"MEDUSA_URL\")}/api/v2/system/status', headers={'X-API-KEY': os.environ.get(\"MEDUSA_API_KEY\")}).raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - medusa_network

  # Uncomment and configure if you need to run Medusa in the same stack
  # medusa:
  #   image: lscr.io/linuxserver/medusa:latest
  #   container_name: medusa
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #   volumes:
  #     - ./medusa/config:/config
  #     - /path/to/tvshows:/tv
  #     - /path/to/downloads:/downloads
  #   ports:
  #     - 8081:8081
  #   restart: unless-stopped
  #   networks:
  #     - medusa_network

networks:
  medusa_network:
    driver: bridge

volumes:
  tmdb_cache:
